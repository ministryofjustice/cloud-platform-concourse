resource_types:
- name: pull-request
  type: docker-image
  source:
    repository: teliaoss/github-pr-resource

resources:
- name: cloud-platform-environments-repo-pull-requests
  type: pull-request
  check_every: 1m
  source:
    repository: ministryofjustice/cloud-platform-environments
    access_token: ((cloud-platform-environments-pr-git-access-token))
- name: tools-image
  type: docker-image
  source:
    repository: 926803513772.dkr.ecr.eu-west-1.amazonaws.com/cloud-platform/tools
    tag: latest
    aws_access_key_id: ((aws-live-0.access-key-id))
    aws_secret_access_key: ((aws-live-0.secret-access-key))

jobs:
  - name: plan
    serial: true
    plan:
      - get: cloud-platform-environments-repo-pull-requests
        trigger: true
        version: every
      - put: cloud-platform-environments-repo-pull-requests
        params:
          path: cloud-platform-environments-repo-pull-requests
          status: pending
      - get: tools-image
      - task: plan-environments
        image: tools-image
        config:
          platform: linux
          inputs:
            - name: cloud-platform-environments-repo-pull-requests
          params:
            AWS_ACCESS_KEY_ID: ((aws-live-0.access-key-id))
            AWS_SECRET_ACCESS_KEY: ((aws-live-0.secret-access-key))
            KUBECONFIG_AWS_ACCESS_KEY_ID: ((aws-live-1.access-key-id))
            KUBECONFIG_AWS_SECRET_ACCESS_KEY: ((aws-live-1.secret-access-key))
            KUBECONFIG: /tmp/kubeconfig
            TF_PLUGIN_CACHE_DIR: /tmp/terraform-plugin-cache
          run:
            path: /bin/sh
            dir: cloud-platform-environments-repo-pull-requests
            args:
              - -c
              - |
                export branch_head_sha=`cat .git/resource/metadata.json | jq -r '.[3] | .value'`
                export master_base_sha=`cat .git/resource/metadata.json | jq -r '.[5] | .value'`
                mkdir -p "${TF_PLUGIN_CACHE_DIR}"
                (
                  AWS_ACCESS_KEY_ID="${KUBECONFIG_AWS_ACCESS_KEY_ID}"
                  AWS_SECRET_ACCESS_KEY="${KUBECONFIG_AWS_SECRET_ACCESS_KEY}"
                  aws s3 cp s3://cloud-platform-concourse-kubeconfig/kubeconfig /tmp/kubeconfig
                )
                ./bin/plan
        on_failure:
            put: cloud-platform-environments-repo-pull-requests
            params:
              path: cloud-platform-environments-repo-pull-requests
              status: failure
        on_success:
            put: cloud-platform-environments-repo-pull-requests
            params:
              path: cloud-platform-environments-repo-pull-requests
              status: success
